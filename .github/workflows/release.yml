name: Release

on:
  push:
    branches:
      - develop
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build Docker images
        run: |
          echo "${{ secrets.GHCR_PAT }}" > github_token
          export DOCKER_BUILDKIT=1
          docker buildx build --builder default --platform linux/arm64 \
            --output type=docker --progress=plain \
            --secret id=github_token,src=github_token \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache \
            -t lambda-shell-runtime:tiny -f tiny.Dockerfile .

          docker buildx build --builder default --platform linux/arm64 \
            --output type=docker --progress=plain \
            --secret id=github_token,src=github_token \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache \
            -t lambda-shell-runtime:micro -f micro.Dockerfile .

          docker buildx build --builder default --platform linux/arm64 \
            --output type=docker --progress=plain \
            --secret id=github_token,src=github_token \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache \
            -t lambda-shell-runtime:full -f Dockerfile .
        shell: bash
      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u skunxicat --password-stdin
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GHCR_PAT: ${{ secrets.GHCR_PAT }}